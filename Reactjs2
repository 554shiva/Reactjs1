<AppBar position="static">
  <Tabs value={tabIndex} onChange={(event, newValue) => setTabIndex(newValue)}>
    <Tab label="CriticalClientReportStatus" />
    <Tab label="CriticalClientEditReport" />
  </Tabs>
</AppBar>

useEffect(() => {
  if (tabIndex === 0) {
    axios.get('http://10.143.5.240:8080/api/clientByRegion')
      .then(response => {
        setReportData(response.data);
      })
      .catch(error => {
        console.log(error);
      });
  }
}, [tabIndex]);


{tabIndex === 0 && (
  <TableContainer component={Paper}>
    <Table>
      <TableHead>
        <TableRow>
          <TableCell>Client</TableCell>
          <TableCell>Region</TableCell>
          <TableCell>Status</TableCell>
        </TableRow>
      </TableHead>
      <TableBody>
        {reportData.map(row => (
          <TableRow key={row.client}>
            <TableCell>{row.client}</TableCell>
            <TableCell>{row.region}</TableCell>
            <TableCell>
              {row.status === 'G' && (
                <Button style={{ backgroundColor: 'green' }} onClick={() => handleButtonClick(row.client, row.region)}>
                  {row.status}
                </Button>
              )}
              {row.status === 'R' && (
                <Button style={{ backgroundColor: 'red' }} onClick={() => handleButtonClick(row.client, row.region)}>
                  {row.status}
                </Button>
              )}
              {row.status ==='Y' && (
<Button style={{ backgroundColor: 'yellow' }} onClick={() => handleButtonClick(row.client, row.region)}>
{row.status}
</Button>
)}
</TableCell>
</TableRow>
))}
</TableBody>
</Table>
</TableContainer>
)}





const handleButtonClick = (client, region) => {
  axios.get(`http://10.143.5.240:8080/api/reportsByClient/${client}/${region}`)
    .then(response => {
      console.log(response.data);
    })
    .catch(error => {
      console.log(error);
    });
};


{tabIndex === 1 && (
  <div>
    <h2>CriticalClientEditReport</h2>
    <p>This is the edit report tab.</p>
  </div>
)}


---------------------------------------------------

import { useState, useEffect } from 'react';
import axios from 'axios';
import { AppBar, Tabs, Tab, TableContainer, Table, TableHead, TableRow, TableCell, TableBody, Button, Paper } from '@material-ui/core';

function App() {
  const [tabIndex, setTabIndex] = useState(0);
  const [reportData, setReportData] = useState([]);

  useEffect(() => {
    if (tabIndex === 0) {
      axios.get('http://10.143.5.240:8080/api/clientByRegion')
        .then(response => {
          setReportData(response.data);
        })
        .catch(error => {
          console.log(error);
        });
    }
  }, [tabIndex]);

  const handleButtonClick = (client, region) => {
    axios.get(`http://10.143.5.240:8080/api/reportsByClient/${client}/${region}`)
      .then(response => {
        console.log(response.data);
      })
      .catch(error => {
        console.log(error);
      });
  };

  return (
    <div>
      <AppBar position="static">
        <Tabs value={tabIndex} onChange={(event, newValue) => setTabIndex(newValue)}>
          <Tab label="CriticalClientReportStatus" />
          <Tab label="CriticalClientEditReport" />
        </Tabs>
      </AppBar>
      {tabIndex === 0 && (
        <TableContainer component={Paper}>
          <Table>
            <TableHead>
              <TableRow>
                <TableCell>Client</TableCell>
                <TableCell>Region</TableCell>
                <TableCell>Status</TableCell>
              </TableRow>
            </TableHead>
            <TableBody>
              {reportData.map(row => (
                <TableRow key={row.client}>
                  <TableCell>{row.client}</TableCell>
                  <TableCell>{row.region}</TableCell>
                  <TableCell>
                    {row.status === 'G' && (
                <Button style={{ backgroundColor: 'green' }} onClick={() => handleButtonClick(row.client, row.region)}>
                  {row.status}
                </Button>
              )}
              {row.status === 'R' && (
                <Button style={{ backgroundColor: 'red' }} onClick={() => handleButtonClick(row.client, row.region)}>
                  {row.status}
                </Button>
              )}
              {row.status === 'Y' && (
                <Button style={{ backgroundColor: 'yellow' }} onClick={() => handleButtonClick(row.client, row.region)}>
                  {row.status}
                </Button>
              )}
            </TableCell>
          ))}
        </TableBody>
      </Table>
    </TableContainer>
  )}
  {tabIndex === 1 && (
    <div>
      <h2>CriticalClientEditReport</h2>
      <p>This is the edit report tab.</p>
    </div>
  )}
</div>

);
}

export default App;


